import sys
import re

def cmp_weighs(a,b):
	x = a[1:len(a)-1].split(',')
	y = b[1:len(b)-1].split(',')
	# print "---", x, y # debug
	if float(x[1]) < float(y[1]):
		return True
	else:	
		return False
		
def key_weigh(s):
	return float(s[1:len(s)-1].split(',')[1])
		
test_cases = open(sys.argv[1], 'r')
for test in test_cases:
	if( len(test) > 0 ):
		# print test
		test = test.rstrip()
		v = test.split(':')
		mw = int(v[0])
		tmp1 = re.findall('\(.+?\)', v[1])
		# print mw, tmp1 # debug
		tmp = sorted(tmp1, key=key_weigh)
		# print tmp # debug
		ndx = []
		w = []
		c = []
		for t in tmp:
			tt = t[1:len(t)-1].split(',')
			# print tt # debug
			ndx.append( int(tt[0]) )
			w.append( float(tt[1]) )
			c.append( float(tt[2][1:]) )
		#print ndx, w, c	 # debug
		nc = 1 << len(w)
		maxc = 0.0
		maxndx = -1
		maxlist = []
		for i in xrange(nc):
			msk = 1
			testl = []
			for j in xrange( len(w) ):
				if (i & msk) != 0:
					testl.append(j)
				msk = msk << 1
			totw = 0.0
			totc = 0.0	
			for ss in testl:
				totw = totw + w[ss]
				totc = totc + c[ss]
			if totw > mw:
				continue
			if totc > maxc:
				maxc = totc
				maxndx = i
				maxlist = testl
		if maxndx == -1:
			print "-"
		else:
			ndxlist = []
			for j in maxlist:	
				ndxlist.append(ndx[j])
			oo = ""
			for j in sorted(ndxlist):
				oo += str(j) + ","
			print oo[0:len(oo)-1]	
test_cases.close()
